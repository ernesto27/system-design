docker network create cassandra

docker run  -d -p 9042:9042  --name cassandra --hostname cassandra --network cassandra cassandra

docker run --rm -it --network cassandra nuvo/docker-cqlsh cqlsh cassandra 9042 --cqlversion='3.4.6'


create keyspace chatmessages with replication =  { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };

create table chatmessages.users (
    id uuid PRIMARY KEY, 
    username text, 
    password varchar, 
    api_token varchar, 
    created_at timestamp,
    contacts set<UUID>,
);
CREATE INDEX ON chatmessages.users (username);
CREATE INDEX ON chatmessages.users (api_token);

INSERT INTO chatmessages.users (
    id, 
    username, 
    password, 
    api_token, 
    created_at, 
    contacts)  
VALUES (
    UUID(),      
    'john_doe',      
    'my_secure_password',      
    'my_api_token',      
    toTimestamp(now()),      
    {UUID(), UUID(), UUID()} 
);

ALTER TABLE chatmessages.users ADD channels set<UUID>;

STATUS 0 => OFFLINE 
STATUS 1 => ONLINE

ALTER TABLE chatmessages.users ADD status int;


CREATE TABLE chatmessages.messages (
    id uuid,
    message_from uuid,
    message_to uuid,
    content text,
    created_at timestamp,
    channel_id uuid,
    PRIMARY KEY ((channel_id), created_at, id, message_from)
) WITH CLUSTERING ORDER BY (created_at DESC);

insert into chatmessages.messages 
(id, message_from, message_to, content, created_at, channel_id)
values (
    uuid(), 
    6e133e52-7664-43f1-a016-757747c5e24a, 
    uuid(), 
    'test', 
    toTimeStamp(now()),
    c13b2d17-e60e-4f60-9a39-d922eef257cd
);



select * from chatmessages.messages where channel_id = c13b2d17-e60e-4f60-9a39-d922eef257cd order by created_at desc;

select * from chatmessages.messages where channel_id = c13b2d17-e60e-4f60-9a39-d922eef257cd and created_at < '2023-11-08 03:17:05.963000+0000'  order by created_at desc limit 1;

CREATE INDEX ON chatmessages.messages (message_from);
CREATE INDEX ON chatmessages.messages (message_to);
CREATE INDEX ON chatmessages.messages (channel_id);


select * from chatmessages.messages 
where message_from = e63093e5-497c-407b-a391-676ba6d5db2f
and message_to = e63093e5-497c-407b-a391-676ba6d5db2f
order by record_id desc limit 10;



create table chatmessages.channels (id uuid primary key, name text);
ALTER TABLE chatmessages.channels ADD offset int;

insert into chatmessages.channels
(id, name)
values 
(c13b2d17-e60e-4f60-9a39-d922eef257cd, 'channelname');


create table chatmessages.group_messages (channel_id uuid primary key, message_id bigint, user_id uuid, content text, created_at timestamp);
insert into chatmessages.group_messages
(channel_id, message_id, user_id, content, created_at)
values
(UUID(), 1, UUID(), 'some content', toTimestamp(now()));

create table chatmessages.config (id int primary key, consumer_offset int);


Kafka

Start server 
bin/zookeeper-server-start.sh config/zookeeper.properties

bin/kafka-server-start.sh config/server.properties


Producer 
bin/kafka-console-producer.sh --topic quickstart-events --bootstrap-server localhost:9092

Consumer
bin/kafka-console-consumer.sh --topic newtopic  --from-beginning  --bootstrap-server localhost:9092


View topic list
bin/kafka-topics.sh --list --bootstrap-server localhost:9092