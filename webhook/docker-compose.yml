services:
  webhook-api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    ports:
      - "8081:8080"
    env_file:
      - ./api/.env
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:17-alpine
    container_name: postgres
    ports:
      - "5432:5432"
    env_file:
      - ./api/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    env_file:
      - ./api/.env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

volumes:
  rabbitmq_data:
  postgres_data: